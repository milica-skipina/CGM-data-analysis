version: '3' 

services:

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode-streaming
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=cgm
    env_file:
      - ./hadoop.env
    ports:
      - 9870:9870
      - 9000:9000

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1-streaming
    depends_on: 
      - namenode
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2-streaming
    depends_on: 
      - namenode
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:2.4.0-hadoop3.1
    container_name: spark-master-streaming
    ports:
      - 8080:8080
      - 7077:7077
    environment: 
      - PYSPARK_PYTHON=python3
    env_file:
      - ./hadoop.env
    volumes: 
      - ../../scripts:/home/scripts

  spark-worker1:
    image: bde2020/spark-worker:2.4.0-hadoop3.1
    container_name: spark-worker1-streaming
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8081:8081
    env_file:
      - ./hadoop.env

  spark-worker2:
    image: bde2020/spark-worker:2.4.0-hadoop3.1
    container_name: spark-worker2-streaming
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8082:8081
    env_file:
      - ./hadoop.env

  hue:
    image: gethue/hue:latest
    hostname: hue
    container_name: hue-streaming
    dns: 8.8.8.8
    ports:
      - "8888:8888"
    volumes:
      - ./conf.dist:/usr/share/hue/desktop/conf
    depends_on: 
      - namenode

  zoo:
    image: zookeeper:3.4.9
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - zoo:/data
      - zoolog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka:/var/lib/kafka/data
    depends_on:
      - zoo

  producer:
    build: ./producer
    container_name: kafka_producer
    environment: 
      KAFKA_BROKER: "kafka:19092"
      TOPIC: "cgm"
      HDFS_HOSTNAME: "http://namenode:9870"
    depends_on: 
      - kafka

#  warning-app:
#    build: ./warning-app
#    container_name: warning-app
#    environment:
#      KAFKA_BROKER: "kafka:19092"
#      TOPIC_CONSUMER: "cgm"
#      TOPIC_PRODUCER: "warning"
#      ZOO_KEEPER: "zoo:2181"
#    depends_on:
#      - kafka

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:
  zoo:
  zoolog:
  kafka:
